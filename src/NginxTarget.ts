import {AbstractTarget, TargetOptions} from "./Target";

export interface NginxOptions extends TargetOptions {

    /**
     * Don't generate nginx `location` directive
     * @default 'false'
     */
    omitLocation?: boolean;
}


class NginxTarget extends AbstractTarget {
    private readonly omitLocation: boolean = false

    constructor(options: NginxOptions) {
        super(options)

        if (options.omitLocation) {
            this.omitLocation = options.omitLocation
        }
    }

    createConfig(assets: string[]): string {
        const content = [
            `# Automatically generated by ServerPushWebpackPlugin, don't change it manually
# Please include this file in your nginx web server directive
# \`\`\`
#   include nginx.push.conf;
# \`\`\``]

        if (!this.omitLocation) {
            content.push(`location = /${this.index} {`)
        }

        assets.forEach((asset) => {
            content.push(`  http2_push ${asset};`)
        })

        if (!this.omitLocation) {
            content.push('}')
        }

        return content.join('\n')
    }
}

export default NginxTarget
